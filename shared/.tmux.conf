# For Mac, interact with pbcopy, pbpaste, launchctl, etc. from tmux
if-shell \
  '[ "$(uname -s)" = "Darwin" ]' \
  'set-option -g default-command "reattach-to-user-namespace -l zsh"'

# This is supposed to help with ghci line editing getting messed up
# in tmux; see https://github.com/tmux/tmux/issues/131#issuecomment-145344660
set escape-time 100

set -g set-titles on
set -g set-titles-string "#{pane_title}"

# Start windows and panes at 1, not 0.
set -g base-index 1
set -g pane-base-index 1

# Enabling mode-mouse means that we won't be able to easily highlight and copy to the system clipboard
# setw -g mode-mouse on
setw -g mouse off

# Add vim key bindings.
setw -g mode-keys vi
# Bind prefix to Ctrl+A.
unbind C-b
set -g prefix C-a
bind-key a send-prefix

# Don't delay escape key (delay is annoying when switching vim modes)
set -sg escape-time 0

# Status bar style

# Note that 'default' means no color, e.g. transparent
#set -g status-bg colour16
set -g status-bg default
#set -g status-fg colour224
set -g status-fg default

set -g status-left " Î£ "
set -g status-left-style fg=colour10
#set -ag status-left-style default

set -g status-interval 1 # 1 second
set -g window-status-format " #I: #W "

set -g window-status-current-format " #I: #W "
set -g window-status-current-style fg=colour45
set -ag window-status-current-style bg=colour236

set -g status-right "%b %d %l:%M:%S %p "
set -g status-right-style fg=colour244
#set -ag status-right-bg default

# Prevent capturing too many keystrokes when
# moving between panes.
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

bind-key -n M-k select-pane -U
bind-key -n M-j select-pane -D
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R

bind-key -r M-k resize-pane -U
bind-key -r M-j resize-pane -D
bind-key -r M-h resize-pane -L
bind-key -r M-l resize-pane -R
bind-key -r M-Up resize-pane -U
bind-key -r M-Down resize-pane -D
bind-key -r M-Left resize-pane -L
bind-key -r M-Right resize-pane -R
# Set Meta-Num to select window.
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
# Set Meta-p/n to select prev/next window
bind-key -n M-p select-window -p
bind-key -n M-n select-window -n
# Allow Ctrl+Left/Right to move between words.
set-window-option -g xterm-keys on

# Use Ctrl+k to clear the screen and the scroll history.
# DISABLED: THIS GETS IN THE WAY OF C-k for vim move to lower split
# bind -n C-k send-keys C-l \; clear-history

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
# These are bound to prefix <char> so we can continue to use stuff like C-l for clear

#TODO
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind-key -n "M-h" if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n "M-j" if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n "M-k" if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n "M-l" if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n "M-\\" if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#bind-key -n M-h select-pane -L
#bind-key -n M-j select-pane -D
#bind-key -n M-k select-pane -U
#bind-key -n M-l select-pane -R

######## TMUX PLUGIN MANAGER ########

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'

# Disabling this...it seems to send a weird control sequence + I
# when I try to run the :Rg! command in vim.
#set -g @plugin 'tmux-plugins/tmux-sensible'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
